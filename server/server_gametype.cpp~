#include "server_gametype.h"

gametype_t::gametype_t() : array(this, true){}

void gametype_t::engine(){
	std::vector<void*> coord_vector = find_all_pointers_of_type("coord_t");
	lock_array_of_data_type(coord_vector, ((bool*)coord_vector[0]->array-(bool*)coord_vector[0]));
	for(unsigned long int i = 0;i < coord_vector;i++){
	}
	unlock_array_of_data_type(coord_vector, ((bool*)coord_vector[0]->array-(bool*)coord_vector[0]));
}

gametype_t::~gametype_t(){}

gametype_info_t::gametype_info_t() : array(this, true){
	array.int_value.push_back(&gametype_id);
}

gametype_info_t::~gametype_info_t(){}

static gametype_info_t gametype_info;

void gametype_init(){
	loop_add(&server_loop_code, "gametype engine", gametype_engine);
}

void gametype_engine(){
	gametype_t *current_gametype = (gametype_t*)find_pointer(gametype_info.gametype_id);
	if(current_gametype == nullptr){
		current_gametype->engine();
	}
}

void gametype_close(){
	loop_del(&server_loop_code, gametype_engine);
}
