/*
Czech_mate by Daniel
This file is part of Czech_mate.

Czech_mate is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License Version 2 as published by
the Free Software Foundation, 

Czech_mate is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Czech_mate.  If not, see <http://www.gnu.org/licenses/>.
*/
#include "c_engine.h"

extern net_t *net;
extern client_t *self;
extern std::vector<coord_t*> coord;
extern std::vector<coord_extra_t> coord_extra;
extern std::vector<model_t*> model;
extern std::vector<model_extra_t> model_extra;

static coord_t *old_coord = nullptr;
static net_ip_connection_info_t server_connection_info;

static void net_engine_parse(std::string a){
	switch(a[0]){
	case ARRAY_HEADER_COORD_T:
		if(true){
			coord_t b;
			b.array->parse_string(*a);
			store_coord_t(b, &coord, &coord_extra);
		}
		break;
	case ARRAY_HEADER_MODEL_T:
		if(true){
			model_t b;
			b.array->parse_string(*a);
			store_model_t(b, &model, &model_extra);
		}
	default:
		break;
	}
}

void net_engine(){
	server_connection_info.ip = "127.0.0.1";
	server_connection_info.port = NET_IP_SERVER_RECEIVE_PORT;
	std::string a;
	while((a = net->read()) != ""){
		net_engine_parse(a);
	}
	if(unlikely(old_coord == nullptr)){
		old_coord = new coord_t;
	}
	if(likely(memcmp(&old_coord,self->coord,sizeof(coord_t)) != 0)){
		net->write(self->array->gen_string(), server_connection_info);
		printf("Wrote new coord data into the buffer\n");
	}
	memcpy(&old_coord,self->coord,sizeof(coord_t)); //padding
}

void input_engine(){

}

void render_engine(){
}
