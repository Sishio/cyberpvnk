#ifndef UTIL_H // this is embeded enough for it to not be modular
	#define UTIL_H
	#include "../math/math_main.h"
	#include  "../main.h"
	#include "cstdio"
	#include "climits"
	#include "cstdlib"
	#include "string"
	#include "cassert"
	#include "fstream"
	#include "SDL2/SDL.h"
	#ifdef __linux
		#include "fcntl.h"
		#include "sys/types.h"
		#include "unistd.h"
		#include "time.h"
	#elif _WIN32
		#include "windows.h"
	#endif
	#define UTIL_SHELL_DELETE 0
	#define UTIL_TIME_MILLISECOND 0
	#define UTIL_TIME_SECOND 1
	class timer_struct_t{
	private:
		float start_time;
		float end_time;
		int type;
	public:
		void start_timer();
		void end_timer();
		float get_time(int);
	};
	extern int util_shell(int,char*);
	extern void ms_sleep(float);
	extern unsigned int gen_rand(unsigned int a = UINT_MAX);
	extern short int term_if_true(bool, char*);
	extern short int warn_if_true(bool, char*);
	extern bool float_cmp(float a,float b,float degree_of_error = (float)0.001);
	extern bool probably_equal(int,int);
	extern float get_time();
#endif
